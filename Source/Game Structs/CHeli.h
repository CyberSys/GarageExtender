// Generated by IDAStruct_To_CHeader.py
#pragma once
#include <windows.h>
#include "CAutomobile.h"


#pragma pack(push, 1)
struct CHeli	// sizeof = 0xA18
{
	CAutomobile __parent;
	BYTE _undefined_0;
	BYTE _undefined_1;
	BYTE _undefined_2;
	BYTE _undefined_3;
	BYTE _undefined_4;
	BYTE _undefined_5;
	BYTE _undefined_6;
	BYTE _undefined_7;
	BYTE _undefined_8;
	BYTE _undefined_9;
	BYTE _undefined_10;
	BYTE _undefined_11;
	BYTE _undefined_12;
	BYTE _undefined_13;
	BYTE _undefined_14;
	BYTE _undefined_15;
	BYTE _undefined_16;
	BYTE _undefined_17;
	BYTE _undefined_18;
	BYTE _undefined_19;
	BYTE _undefined_20;
	BYTE _undefined_21;
	BYTE _undefined_22;
	BYTE _undefined_23;
	BYTE _undefined_24;
	BYTE _undefined_25;
	BYTE _undefined_26;
	BYTE _undefined_27;
	BYTE _undefined_28;
	BYTE _undefined_29;
	BYTE _undefined_30;
	BYTE _undefined_31;
	BYTE _undefined_32;
	BYTE _undefined_33;
	BYTE _undefined_34;
	BYTE _undefined_35;
	BYTE _undefined_36;
	BYTE _undefined_37;
	BYTE _undefined_38;
	BYTE _undefined_39;
	BYTE _undefined_40;
	BYTE _undefined_41;
	BYTE _undefined_42;
	BYTE _undefined_43;
	BYTE _undefined_44;
	BYTE _undefined_45;
	BYTE _undefined_46;
	BYTE _undefined_47;
	BYTE _undefined_48;
	BYTE _undefined_49;
	BYTE _undefined_50;
	BYTE _undefined_51;
	BYTE _undefined_52;
	BYTE _undefined_53;
	BYTE _undefined_54;
	BYTE _undefined_55;
	BYTE _undefined_56;
	BYTE _undefined_57;
	BYTE _undefined_58;
	BYTE _undefined_59;
	DWORD field_9C4;
	BYTE _undefined_60;
	BYTE _undefined_61;
	BYTE _undefined_62;
	BYTE _undefined_63;
	BYTE _undefined_64;
	BYTE _undefined_65;
	BYTE _undefined_66;
	BYTE _undefined_67;
	BYTE _undefined_68;
	BYTE _undefined_69;
	BYTE _undefined_70;
	BYTE _undefined_71;
	BYTE _undefined_72;
	BYTE _undefined_73;
	BYTE _undefined_74;
	BYTE _undefined_75;
	BYTE _undefined_76;
	BYTE _undefined_77;
	BYTE _undefined_78;
	BYTE _undefined_79;
	BYTE _undefined_80;
	BYTE _undefined_81;
	BYTE _undefined_82;
	BYTE _undefined_83;
	BYTE _undefined_84;
	BYTE _undefined_85;
	BYTE _undefined_86;
	BYTE _undefined_87;
	BYTE _undefined_88;
	BYTE _undefined_89;
	BYTE _undefined_90;
	BYTE _undefined_91;
	BYTE _undefined_92;
	BYTE _undefined_93;
	BYTE _undefined_94;
	BYTE _undefined_95;
	BYTE _undefined_96;
	BYTE _undefined_97;
	BYTE _undefined_98;
	BYTE _undefined_99;
	BYTE _undefined_100;
	BYTE _undefined_101;
	BYTE _undefined_102;
	BYTE _undefined_103;
	BYTE _undefined_104;
	BYTE _undefined_105;
	BYTE _undefined_106;
	BYTE _undefined_107;
	BYTE _undefined_108;
	BYTE _undefined_109;
	BYTE _undefined_110;
	BYTE _undefined_111;
	BYTE _undefined_112;
	BYTE _undefined_113;
	BYTE _undefined_114;
	BYTE _undefined_115;
	BYTE _undefined_116;
	BYTE _undefined_117;
	BYTE _undefined_118;
	BYTE _undefined_119;
	BYTE _undefined_120;
	BYTE _undefined_121;
	BYTE _undefined_122;
	BYTE _undefined_123;
	BYTE _undefined_124;
	BYTE _undefined_125;
	BYTE _undefined_126;
	BYTE _undefined_127;
	BYTE _undefined_128;
	BYTE _undefined_129;
	BYTE _undefined_130;
	BYTE _undefined_131;
	BYTE _undefined_132;
	BYTE _undefined_133;
	BYTE _undefined_134;
	BYTE _undefined_135;
	DWORD field_A14;
};
#pragma pack(pop)

static_assert(sizeof(CHeli) == 0xA18, "Incorrect struct size: CHeli");